/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

/**
 *
 * @author bruno
 */
public class Pagamento extends javax.swing.JFrame {

    /**
     * Creates new form Pagamento
     */
    public Pagamento() {
        setTitle("Pagamento");
        initComponents();
        setSize(410, 300);
        setLocationRelativeTo(null);
    
        // Popular combo box com mesas
        for (int i = 1; i <= 3; i++) {
            cmbMesa.addItem("Mesa " + i);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPagar = new javax.swing.JButton();
        cmbMesa = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        btnPagar.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPagar);
        btnPagar.setBounds(160, 210, 76, 30);

        getContentPane().add(cmbMesa);
        cmbMesa.setBounds(130, 100, 130, 26);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Restaurante.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-270, -260, 690, 560);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
    String mesaSelecionada = (String) cmbMesa.getSelectedItem();
    int numeroMesa = Integer.parseInt(mesaSelecionada.replace("Mesa ", ""));

    try (Connection conn = new Conexao().getConexao()) {
        if (conn == null) {
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados!");
            return;
        }

        
        PreparedStatement psMesa = conn.prepareStatement("SELECT id_mesa FROM mesas WHERE numero = ?");
        psMesa.setInt(1, numeroMesa);
        ResultSet rsMesa = psMesa.executeQuery();

        if (!rsMesa.next()) {
            JOptionPane.showMessageDialog(this, "Mesa não encontrada!");
            return;
        }

        int idMesa = rsMesa.getInt("id_mesa");

      
        PreparedStatement psPedidos = conn.prepareStatement(
            "SELECT c.nome, p.quantidade, c.preco, (p.quantidade * c.preco) AS total " +
            "FROM pedidos p JOIN cardapio c ON p.id_item = c.id_item " +
            "WHERE p.id_mesa = ? AND p.status IN ('preparando', 'pronto')"
        );
        psPedidos.setInt(1, idMesa);
        ResultSet rsPedidos = psPedidos.executeQuery();

        StringBuilder resumo = new StringBuilder();
        double totalGeral = 0;
        while (rsPedidos.next()) {
            String nome = rsPedidos.getString("nome");
            int quantidade = rsPedidos.getInt("quantidade");
            double total = rsPedidos.getDouble("total");
            totalGeral += total;

            resumo.append(quantidade).append("x ").append(nome)
                  .append(" - R$").append(String.format("%.2f", total)).append("\n");
        }

        if (resumo.length() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum pedido encontrado para essa mesa.");
            return;
        }

        resumo.append("\nTotal: R$").append(String.format("%.2f", totalGeral));

        
        int confirm2 = JOptionPane.showConfirmDialog(
        this,                           // A janela onde o diálogo será exibido
        "Deseja contribuir com os 10%?", // O texto que será exibido
        "Confirmar Contribuição",        // O título da caixa de diálogo
        JOptionPane.YES_NO_OPTION       // Tipo de opções (YES/NO)
    );

        
        if (confirm2 == JOptionPane.YES_OPTION) {
            totalGeral += totalGeral * 0.10; 
            resumo.append("\n10% de contribuição: R$").append(String.format("%.2f", totalGeral * 0.10));
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Itens consumidos:\n\n" + resumo + "\n\nDeseja pagar?",
                                                     "Confirmar pagamento", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
         
            String nomeArquivo = "Pagamento_Mesa_" + numeroMesa + ".txt";
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(nomeArquivo))) {
                writer.write("Pagamento da Mesa " + numeroMesa + "\n");
                writer.write(resumo.toString());
            }

         
            String dataCompra = java.time.LocalDateTime.now().toString(); 
            String valorTotal = String.format("R$%.2f", totalGeral);

            try (BufferedWriter writer = new BufferedWriter(new FileWriter("historico.txt", true))) {
                writer.write(dataCompra + ";" + numeroMesa + ";" + valorTotal);
                writer.newLine();
            } catch (IOException e) {
                e.printStackTrace();
            }

            // Atualizar status dos pedidos
            PreparedStatement psUpdate = conn.prepareStatement(
                "UPDATE pedidos SET status = 'entregue' WHERE id_mesa = ? AND status IN ('preparando', 'pronto')"
            );
            psUpdate.setInt(1, idMesa);
            psUpdate.executeUpdate();

            // Liberar a mesa
            PreparedStatement psMesaLivre = conn.prepareStatement(
                "UPDATE mesas SET status = 'livre' WHERE id_mesa = ?"
            );
            psMesaLivre.setInt(1, idMesa);
            psMesaLivre.executeUpdate();

            JOptionPane.showMessageDialog(this, "Pagamento efetuado com sucesso!\nArquivo salvo: " + nomeArquivo);
            this.dispose();
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao processar pagamento: " + e.getMessage());
    }
    }//GEN-LAST:event_btnPagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pagamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagar;
    private javax.swing.JComboBox<String> cmbMesa;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
